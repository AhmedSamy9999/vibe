import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { Providers } from './providers';
import { TRPCReactProvider } from '@/trpc/client';
import { Toaster } from '@/components/ui/sonner';

const geistSans = Geist({
	variable: '--font-geist-sans',
	subsets: ['latin'],
});

const geistMono = Geist_Mono({
	variable: '--font-geist-mono',
	subsets: ['latin'],
});

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
};

/**
 * Root layout component for the application.
 *
 * Renders the top-level HTML structure and global providers used across the app:
 * - Wraps the app with the TRPC React provider.
 * - Sets <html lang="en"> and applies a dark color scheme and global font CSS variables.
 * - Wraps content with the app-level Providers and includes a Toaster for toast notifications.
 *
 * @param children - The page or application content to render inside the layout.
 * @returns The root layout React element containing global providers and the passed children.
 */
export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		<TRPCReactProvider>
			<html lang="en" className="dark" style={{ colorScheme: 'dark' }}>
				<body
					className={`${geistSans.variable} ${geistMono.variable} antialiased`}
				>
					<Providers>
						<Toaster />
						{children}
					</Providers>
				</body>
			</html>
		</TRPCReactProvider>
	);
}
